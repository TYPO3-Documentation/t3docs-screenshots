#!/bin/bash

## Description: (Re-)install the project
## Usage: install [flags]
## Example: ddev install\nddev install --force
## Flags: [{"Name":"force","Shorthand":"f","Usage":"Do not ask any interactive question"}]

# Initialize local variables
SUITE_ID=""
FORCE=""
CHOICE=""

# Functions
reset_project () {
    rm -rf config
    rm -rf public
    rm -rf var
    rm -rf vendor
    ddev delete -Oy
}

activate_extensions () {
    local result;

    extensions="-e typo3conf/ext/screenshots"
    if [ "$SUITE_ID" = "Examples" ]; then
        extensions+=" -e typo3conf/ext/examples"
    elif [ "$SUITE_ID" = "Introduction" ]; then
        extensions+=" -e typo3conf/ext/bootstrap_package -e typo3conf/ext/introduction"
    elif [ "$SUITE_ID" = "Styleguide" ]; then
        extensions+=" -e typo3conf/ext/styleguide"
    elif [ ! "$SUITE_ID" = "" ]; then
        echo "Invalid suite \"$SUITE_ID\". Please select either Core, Examples, Install, Introduction or Styleguide."
    fi

    result=$(ddev exec typo3 screenshots:activateextensions "${extensions}")

    echo $result
}

install_project () {
    reset_project
    ddev start
    ddev composer install --no-interaction
    activate_extensions
    ddev config --project-type=typo3 --docroot=public
    ddev exec touch public/FIRST_INSTALL
}


# Parse options and arguments
while :; do
    case ${1:-} in
        -s|--suite-id)
            SUITE_ID=$2
            shift 2
            ;;
        -f|--force)
            FORCE=true
            ;;
        *) # Default case: No more options, so break out of the loop.
            break
    esac

    shift
done

# Set user confirmation if force option not set
if [ ! "${FORCE}" = "true" ] ; then
    printf "Warning, this will reset the project and remove all changes. Continue [yes/no]? "
    read CHOICE
fi

if [ "${CHOICE}" = "yes" ] || [ "${FORCE}" = "true" ] ; then
    install_project
fi
